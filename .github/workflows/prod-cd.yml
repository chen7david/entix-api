name: Prod CD

on:
  workflow_run:
    workflows: ['Prod CI']
    types: ['completed']
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Debug Workflow Run Data
        run: |
          echo "Workflow triggered by: ${{ github.event.workflow_run.event }}"
          echo "Workflow Conclusion: ${{ github.event.workflow_run.conclusion }}"
          echo "Head Branch: ${{ github.event.workflow_run.head_branch }}"
          echo "Workflow Name: ${{ github.event.workflow_run.name }}"

      - name: Ensure Workflow Was Triggered by Staging CI on Staging Branch
        if: >
          github.event.workflow_run.conclusion != 'success' ||
          github.event.workflow_run.head_branch != 'main'
        run: |
          echo "Skipping: Not triggered by a successful merge into main"
          exit 1

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Trigger Jenkins Job Webhook
        if: success()
        uses: appleboy/jenkins-action@v1.1.1
        with:
          url: ${{ vars.JENKINS_URL }}
          user: ${{ vars.JENKINS_USER }}
          token: ${{ secrets.JENKINS_TOKEN }}
          job: prod-entix-api
